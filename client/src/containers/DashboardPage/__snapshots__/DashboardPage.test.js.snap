// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DashboardPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="menu"
        >
          <div
            className="logo"
          >
            <img
              alt="logo"
              src="Group 10@2x.png"
            />
            <p>
              toggl clone
            </p>
          </div>
        </div>,
        <div
          className="main"
        >
          <form
            onSubmit={[Function]}
          >
            <input
              onChange={[Function]}
              placeholder="What are you working on?"
              type="text"
              value=""
            />
            <div
              className="timer"
            >
              <span>
                00
              </span>
              :
              <span>
                00
              </span>
              :
              <span>
                00
              </span>
            </div>
            <img
              alt="button"
              onClick={[Function]}
              src="Group 44@2x.png"
            />
          </form>
        </div>,
      ],
      "className": "dashboard",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="logo"
          >
            <img
              alt="logo"
              src="Group 10@2x.png"
            />
            <p>
              toggl clone
            </p>
          </div>,
          "className": "menu",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                src="Group 10@2x.png"
              />,
              <p>
                toggl clone
              </p>,
            ],
            "className": "logo",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "src": "Group 10@2x.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "toggl clone",
              },
              "ref": null,
              "rendered": "toggl clone",
              "type": "p",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            onSubmit={[Function]}
          >
            <input
              onChange={[Function]}
              placeholder="What are you working on?"
              type="text"
              value=""
            />
            <div
              className="timer"
            >
              <span>
                00
              </span>
              :
              <span>
                00
              </span>
              :
              <span>
                00
              </span>
            </div>
            <img
              alt="button"
              onClick={[Function]}
              src="Group 44@2x.png"
            />
          </form>,
          "className": "main",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                onChange={[Function]}
                placeholder="What are you working on?"
                type="text"
                value=""
              />,
              <div
                className="timer"
              >
                <span>
                  00
                </span>
                :
                <span>
                  00
                </span>
                :
                <span>
                  00
                </span>
              </div>,
              <img
                alt="button"
                onClick={[Function]}
                src="Group 44@2x.png"
              />,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "placeholder": "What are you working on?",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span>
                    00
                  </span>,
                  ":",
                  <span>
                    00
                  </span>,
                  ":",
                  <span>
                    00
                  </span>,
                ],
                "className": "timer",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "00",
                  },
                  "ref": null,
                  "rendered": "00",
                  "type": "span",
                },
                ":",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "00",
                  },
                  "ref": null,
                  "rendered": "00",
                  "type": "span",
                },
                ":",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "00",
                  },
                  "ref": null,
                  "rendered": "00",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "button",
                "onClick": [Function],
                "src": "Group 44@2x.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="menu"
          >
            <div
              className="logo"
            >
              <img
                alt="logo"
                src="Group 10@2x.png"
              />
              <p>
                toggl clone
              </p>
            </div>
          </div>,
          <div
            className="main"
          >
            <form
              onSubmit={[Function]}
            >
              <input
                onChange={[Function]}
                placeholder="What are you working on?"
                type="text"
                value=""
              />
              <div
                className="timer"
              >
                <span>
                  00
                </span>
                :
                <span>
                  00
                </span>
                :
                <span>
                  00
                </span>
              </div>
              <img
                alt="button"
                onClick={[Function]}
                src="Group 44@2x.png"
              />
            </form>
          </div>,
        ],
        "className": "dashboard",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="logo"
            >
              <img
                alt="logo"
                src="Group 10@2x.png"
              />
              <p>
                toggl clone
              </p>
            </div>,
            "className": "menu",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="logo"
                  src="Group 10@2x.png"
                />,
                <p>
                  toggl clone
                </p>,
              ],
              "className": "logo",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "logo",
                  "src": "Group 10@2x.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "toggl clone",
                },
                "ref": null,
                "rendered": "toggl clone",
                "type": "p",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              onSubmit={[Function]}
            >
              <input
                onChange={[Function]}
                placeholder="What are you working on?"
                type="text"
                value=""
              />
              <div
                className="timer"
              >
                <span>
                  00
                </span>
                :
                <span>
                  00
                </span>
                :
                <span>
                  00
                </span>
              </div>
              <img
                alt="button"
                onClick={[Function]}
                src="Group 44@2x.png"
              />
            </form>,
            "className": "main",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  onChange={[Function]}
                  placeholder="What are you working on?"
                  type="text"
                  value=""
                />,
                <div
                  className="timer"
                >
                  <span>
                    00
                  </span>
                  :
                  <span>
                    00
                  </span>
                  :
                  <span>
                    00
                  </span>
                </div>,
                <img
                  alt="button"
                  onClick={[Function]}
                  src="Group 44@2x.png"
                />,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "onChange": [Function],
                  "placeholder": "What are you working on?",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span>
                      00
                    </span>,
                    ":",
                    <span>
                      00
                    </span>,
                    ":",
                    <span>
                      00
                    </span>,
                  ],
                  "className": "timer",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "00",
                    },
                    "ref": null,
                    "rendered": "00",
                    "type": "span",
                  },
                  ":",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "00",
                    },
                    "ref": null,
                    "rendered": "00",
                    "type": "span",
                  },
                  ":",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "00",
                    },
                    "ref": null,
                    "rendered": "00",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "button",
                  "onClick": [Function],
                  "src": "Group 44@2x.png",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
