// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Get tracking
        </h1>,
        <p>
          Log in to your Toggl account.
        </p>,
        <form
          className="form"
        >
          <label
            htmlFor="email"
          >
            EMAIL ADDRESS
          </label>
          <input
            id="email"
            type="email"
          />
          <label
            htmlFor="password"
          >
            PASSWORD
          </label>
          <input
            id="password"
            type="password"
          />
          <p>
            Forgot password?
          </p>
          <button
            className="log-in-btn"
          >
            LOG IN 
            <span />
          </button>
          <div
            className="or"
          >
            <div
              className="hr"
            />
            <p>
              OR
            </p>
            <div
              className="hr"
            />
          </div>
          <button
            className="log-in-google-btn"
          >
            LOG IN WITH GOOGLE
            <span />
          </button>
        </form>,
        <p
          className="no-acc"
        >
          Don't have an account?
        </p>,
        <button>
          <Link
            to="/signup"
          >
            SIGN UP FOR FREE 
            <span />
          </Link>
        </button>,
      ],
      "className": "login",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Get tracking",
        },
        "ref": null,
        "rendered": "Get tracking",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Log in to your Toggl account.",
        },
        "ref": null,
        "rendered": "Log in to your Toggl account.",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="email"
            >
              EMAIL ADDRESS
            </label>,
            <input
              id="email"
              type="email"
            />,
            <label
              htmlFor="password"
            >
              PASSWORD
            </label>,
            <input
              id="password"
              type="password"
            />,
            <p>
              Forgot password?
            </p>,
            <button
              className="log-in-btn"
            >
              LOG IN 
              <span />
            </button>,
            <div
              className="or"
            >
              <div
                className="hr"
              />
              <p>
                OR
              </p>
              <div
                className="hr"
              />
            </div>,
            <button
              className="log-in-google-btn"
            >
              LOG IN WITH GOOGLE
              <span />
            </button>,
          ],
          "className": "form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "EMAIL ADDRESS",
              "htmlFor": "email",
            },
            "ref": null,
            "rendered": "EMAIL ADDRESS",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "email",
              "type": "email",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "PASSWORD",
              "htmlFor": "password",
            },
            "ref": null,
            "rendered": "PASSWORD",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "password",
              "type": "password",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Forgot password?",
            },
            "ref": null,
            "rendered": "Forgot password?",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "LOG IN ",
                <span />,
              ],
              "className": "log-in-btn",
            },
            "ref": null,
            "rendered": Array [
              "LOG IN ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="hr"
                />,
                <p>
                  OR
                </p>,
                <div
                  className="hr"
                />,
              ],
              "className": "or",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "hr",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "OR",
                },
                "ref": null,
                "rendered": "OR",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "hr",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "LOG IN WITH GOOGLE",
                <span />,
              ],
              "className": "log-in-google-btn",
            },
            "ref": null,
            "rendered": Array [
              "LOG IN WITH GOOGLE",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Don't have an account?",
          "className": "no-acc",
        },
        "ref": null,
        "rendered": "Don't have an account?",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            to="/signup"
          >
            SIGN UP FOR FREE 
            <span />
          </Link>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "SIGN UP FOR FREE ",
              <span />,
            ],
            "to": "/signup",
          },
          "ref": null,
          "rendered": Array [
            "SIGN UP FOR FREE ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": [Function],
        },
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Get tracking
          </h1>,
          <p>
            Log in to your Toggl account.
          </p>,
          <form
            className="form"
          >
            <label
              htmlFor="email"
            >
              EMAIL ADDRESS
            </label>
            <input
              id="email"
              type="email"
            />
            <label
              htmlFor="password"
            >
              PASSWORD
            </label>
            <input
              id="password"
              type="password"
            />
            <p>
              Forgot password?
            </p>
            <button
              className="log-in-btn"
            >
              LOG IN 
              <span />
            </button>
            <div
              className="or"
            >
              <div
                className="hr"
              />
              <p>
                OR
              </p>
              <div
                className="hr"
              />
            </div>
            <button
              className="log-in-google-btn"
            >
              LOG IN WITH GOOGLE
              <span />
            </button>
          </form>,
          <p
            className="no-acc"
          >
            Don't have an account?
          </p>,
          <button>
            <Link
              to="/signup"
            >
              SIGN UP FOR FREE 
              <span />
            </Link>
          </button>,
        ],
        "className": "login",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Get tracking",
          },
          "ref": null,
          "rendered": "Get tracking",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Log in to your Toggl account.",
          },
          "ref": null,
          "rendered": "Log in to your Toggl account.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="email"
              >
                EMAIL ADDRESS
              </label>,
              <input
                id="email"
                type="email"
              />,
              <label
                htmlFor="password"
              >
                PASSWORD
              </label>,
              <input
                id="password"
                type="password"
              />,
              <p>
                Forgot password?
              </p>,
              <button
                className="log-in-btn"
              >
                LOG IN 
                <span />
              </button>,
              <div
                className="or"
              >
                <div
                  className="hr"
                />
                <p>
                  OR
                </p>
                <div
                  className="hr"
                />
              </div>,
              <button
                className="log-in-google-btn"
              >
                LOG IN WITH GOOGLE
                <span />
              </button>,
            ],
            "className": "form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "EMAIL ADDRESS",
                "htmlFor": "email",
              },
              "ref": null,
              "rendered": "EMAIL ADDRESS",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "email",
                "type": "email",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "PASSWORD",
                "htmlFor": "password",
              },
              "ref": null,
              "rendered": "PASSWORD",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "password",
                "type": "password",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Forgot password?",
              },
              "ref": null,
              "rendered": "Forgot password?",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "LOG IN ",
                  <span />,
                ],
                "className": "log-in-btn",
              },
              "ref": null,
              "rendered": Array [
                "LOG IN ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
              ],
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="hr"
                  />,
                  <p>
                    OR
                  </p>,
                  <div
                    className="hr"
                  />,
                ],
                "className": "or",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "hr",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "OR",
                  },
                  "ref": null,
                  "rendered": "OR",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "hr",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "LOG IN WITH GOOGLE",
                  <span />,
                ],
                "className": "log-in-google-btn",
              },
              "ref": null,
              "rendered": Array [
                "LOG IN WITH GOOGLE",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
              ],
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Don't have an account?",
            "className": "no-acc",
          },
          "ref": null,
          "rendered": "Don't have an account?",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              to="/signup"
            >
              SIGN UP FOR FREE 
              <span />
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "SIGN UP FOR FREE ",
                <span />,
              ],
              "to": "/signup",
            },
            "ref": null,
            "rendered": Array [
              "SIGN UP FOR FREE ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": [Function],
          },
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
